{"version":3,"sources":["components/rb-header.js","components/rb-pin.js","components/rb-map.js","components/rb-supply-chain.js","components/rb-story-explorer.js","lib/helpers.js","contexts/stories-context.js","partials/risk-home.js","partials/incident-detail.js","App.js","serviceWorker.js","index.js"],"names":["components_rb_header","react_default","a","createElement","className","href","concat","process","src","pinStyle","fill","stroke","RBPin","_this$props$size","this","props","size","height","viewBox","style","d","PureComponent","RBMap","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","viewport","width","latitude","longitude","zoom","asset","assetName","locationName","value","location","_asset$location$0$coo","coordinates","_this2","arguments","length","undefined","assets","stories","markers","assetMarkers","map","i","markerData","getAssetLocationData","esm","key","offsetTop","offsetLeft","onDragStart","_onMarkerDragStart","onDrag","_onMarkerDrag","onDragEnd","_onMarkerDragEnd","rb_pin_RBPin","push","storyMarkers","story","long","lat","_this3","assign","scrollZoom","onViewportChange","setState","renderPins","Component","defaultProps","RBSupplyChain","RBStoryExplorer","selectedLocation","filter","toLowerCase","slice","getStorySelection","Link","to","id","shortSummary","_this$props","renderFilteredStories","transformStoryData","storyData","flatStories","storyUrls","keys","forEach","k","input","stack","toConsumableArray","res","next","pop","Array","isArray","apply","reverse","flatten","j","text","modifiedStory","includes","url","sort","b","score","SharedStoriesContext","React","createContext","SharedStoriesProvider","_Component","getStoryDetail","console","log","getStoriesForSameLocation","storiesData","inherits","createClass","children","Provider","SharedStoriesConsumer","Consumer","RiskHome","_ref","components_rb_map","lib","fluid","lg","components_rb_supply_chain","components_rb_story_explorer","IncidentDetail","storyId","queryString","parse","search","incident","mainStory","otherStories","supplyChainData","App","BrowserRouter","basename","stories_context_SharedStoriesProvider","Route","exact","path","render","partials_risk_home","component","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4baf47ff.chunk.js","sourcesContent":["import React from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport '../styles/rb-header.scss';\n\nexport default () => {\n\treturn (\n\t\t<header className=\"rb-header\">\n\t\t\t<div className=\"rb-header-logo\">\n\t\t\t\t<a href={`${process.env.PUBLIC_URL}`}><img src={`${process.env.PUBLIC_URL}/riskLogo.jpg`} /></a>\n\t\t\t</div>\n\t\t</header>\n\t);\n}","import React, {PureComponent} from 'react';\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\nconst pinStyle = {\n  fill: '#d00',\n  stroke: 'none'\n};\n\nexport default class RBPin extends PureComponent {\n\n  render() {\n    const {size = 20} = this.props;\n\n    return (\n      <svg\n        height={size}\n        viewBox=\"0 0 24 24\"\n        style={pinStyle}\n      >\n        <path d={ICON}/>\n      </svg>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport ReactMapGL, {Marker} from 'react-map-gl';\nimport RBPin from './rb-pin.js';\nimport '../styles/rb-map.scss';\n\nclass RBMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewport: {\n        width: '100%',\n        height: 400,\n        latitude: props.latitude,\n        longitude: props.longitude,\n        zoom: props.zoom\n      }\n    };\n  }\n\n  getAssetLocationData(asset) {\n    // Just grabbing the first location, will have to revisit this\n    // when we have a better sense of our unit of analysis\n    const {assetName, value} = asset;\n    const locationName = asset.location[0].locationName;\n    const {latitude, longitude} = asset.location[0].coordinates[0];\n    return {\n      assetName,\n      latitude,\n      longitude,\n      locationName\n    };\n  }\n\n  renderPins(props=this.props) {\n    const {assets, stories} = props;\n    const markers = [];\n    if (assets.length > 0) {\n      const assetMarkers = assets.map((asset, i) => {\n        const markerData = this.getAssetLocationData(asset);\n        const { longitude, latitude, assetName, value } = markerData;\n        return (\n          <Marker\n            key={`a-${i}`}\n            latitude={+latitude} longitude={+longitude}\n            offsetTop={-20} offsetLeft={-10}\n            onDragStart={this._onMarkerDragStart}\n            onDrag={this._onMarkerDrag}\n            onDragEnd={this._onMarkerDragEnd}\n          >\n          <RBPin size={20} />\n          </Marker>\n        );\n      })\n      markers.push(assetMarkers);\n    }\n    if (stories.length > 0) {\n      const storyMarkers = stories.map((story, i) => {\n        const { long, lat } = story;\n        return (\n          <Marker\n            key={`s-${i}`}\n            latitude={+lat} longitude={+long}\n            offsetTop={-20} offsetLeft={-10}\n            onDragStart={this._onMarkerDragStart}\n            onDrag={this._onMarkerDrag}\n            onDragEnd={this._onMarkerDragEnd}\n          >\n            <RBPin size={20} />\n          </Marker>\n        );\n      })\n      markers.push(storyMarkers);\n    }\n    return markers;\n  }\n\n  render() {\n    const {assets} = this.props;\n    return (\n      <div className=\"rb-map\">\n        <ReactMapGL\n          {...this.state.viewport}\n          scrollZoom={false}\n          onViewportChange={(viewport) => this.setState({viewport})}\n        >\n          {\n            this.renderPins(this.props)\n          }\n        </ReactMapGL>\n      </div>\n    );\n  }\n}\n\nRBMap.defaultProps = {\n  assets: [],\n  stories:[],\n  latitude: 13.5605834,\n  longitude: 19.927948,\n  zoom: 1.56\n};\n\nexport default RBMap;\n","import React, { Component } from 'react';\nimport '../styles/rb-supply-chain.scss';\n\n/**\nsupplyChainData = [\n  {\n    location:[{\n        locationName: \"Location\",\n        coordinates: { lat: 0, long: 0 }\n      },..\n    ]\n    assets: \"Asset Name\",\n    value: \"int\",\n    description: \"description text\",\n  } ...\n];\n**/\n\nclass RBSupplyChain extends Component {\n  render() {\n    const {assets} = this.props;\n    return (\n      <div className=\"rb-supply-chain-wrapper\">\n        <div className=\"rb-supply-list\">\n          <h2 className=\"rb-section-title\">Supply Chain</h2>\n          <ul>\n            {assets.map((asset, i) => {\n              const assetName = asset.assetName;\n              const locationName = asset.location[0].locationName;\n              return (\n                <li key={i}>\n                  <i className=\"fas fa-caret-right rb-list-icon\"></i>\n                  {`${locationName} - ${assetName}`}\n                </li>);\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nRBSupplyChain.defaultProps = {\n  assets: []\n};\n\nexport default RBSupplyChain;\n","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport '../styles/rb-story-explorer.scss';\n\nclass RBStoryExplorer extends Component {\n  getStorySelection(stories, selectedLocation) {\n    return selectedLocation ?\n      stories\n        .filter((story) => { return story.locationName.toLowerCase() === selectedLocation; }) \n        .slice(0, 10) :\n      stories.slice(0, 5);\n\n  }\n\n  renderFilteredStories(props=this.props) {\n    const {stories, selectedLocation} = props;\n    const filteredStories = this.getStorySelection(stories, selectedLocation)\n    return filteredStories.map((story, i) => {\n      return (\n        <li key={i}><Link to={`/incidents?incident=${story.id}`}><span className=\"rb-capitalize\">{story.location}</span> Story {i + 1}</Link>: {story.shortSummary}</li>\n      );\n    })\n  }\n\n  render() {\n    const {stories, selectedLocation} = this.props;\n    return (\n      <div className=\"rb-story-explorer-wrapper\">\n        <div className=\"rb-story-list\">\n          <h2 className=\"rb-section-title\">Story List</h2>\n          <ul>\n            {this.renderFilteredStories()}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nRBStoryExplorer.defaultProps = {\n  stories: [],\n  selectedLocation: ''\n};\n\nexport default RBStoryExplorer;\n","function flatten(input) {\n  const stack = [...input];\n  const res = [];\n  while (stack.length) {\n    // pop value from stack\n    const next = stack.pop();\n    if (Array.isArray(next)) {\n      // push back array items, won't modify the original input\n      stack.push(...next);\n    } else {\n      res.push(next);\n    }\n  }\n  //reverse to restore input order\n  return res.reverse();\n}\n\n// Return flat array of stories and include the location as a key on each story\n// order by score, ascending (most negative stories first)\nexport function transformStoryData(storyData) {\n  const {stories} = storyData;\n  const flatStories = [];\n  const storyUrls = [];\n  Object.keys(stories).forEach((k, i) => {\n    flatten(stories[k]).forEach((story, j) => {\n      const shortSummary = `${story.text.slice(0,300)}...`;\n      const modifiedStory = Object.assign({}, story, {location: k, id: `${i}${j+1}`, shortSummary });\n      if (!storyUrls.includes(story.url)) {\n        flatStories.push(modifiedStory);\n        storyUrls.push(story.url);\n      }\n    })\n  })\n  const sortedFlatStories =\n    flatStories.sort((a, b) => {\n      if (a.score < b.score) {\n        return -1;\n      }\n      if (a.score > b.score) {\n        return 1;\n      }\n      return 0;\n    })\n  return sortedFlatStories;\n}\n","import React, { Component } from 'react';\nimport storiesData from '../data/stories.json';\nimport { transformStoryData } from '../lib/helpers.js';\n\nconst SharedStoriesContext = React.createContext();\n\nexport class SharedStoriesProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stories: transformStoryData(storiesData),\n    };\n  }\n\n  getStoryDetail = id => {\n    console.log(id);\n    return this.state.stories.filter((story) => { return story.id === id; })[0];\n  }\n\n  getStoriesForSameLocation = location => {\n    return this.state.stories.filter((story) => {return story.location === location; })\n  }\n\n\n  render() {\n    const { children } = this.props;\n    const { stories } = this.state;\n\n    return (\n      <SharedStoriesContext.Provider\n        value={{\n          stories,\n          getStoryDetail: this.getStoryDetail,\n          getStoriesForSameLocation: this.getStoriesForSameLocation\n        }}\n      >\n        {children}\n      </SharedStoriesContext.Provider>\n    );\n  }\n}\n\nexport const SharedStoriesConsumer = SharedStoriesContext.Consumer;\n","import React, { Component } from 'react';\nimport RBMap from '../components/rb-map.js';\nimport RBSupplyChain from '../components/rb-supply-chain.js';\nimport RBStoryExplorer from '../components/rb-story-explorer.js';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport { SharedStoriesConsumer } from '../contexts/stories-context.js';\nimport '../styles/risk-home.scss';\n\nclass RiskHome extends Component {\n  render() {\n    const {assets} = this.props;\n    return (\n      <SharedStoriesConsumer>\n        {({stories}) => (\n          <div className=\"rb-home-page rb-page\">\n            <h1 className=\"rb-page-title\">Operations Dashboard</h1>\n            <RBMap assets={assets}/>\n            <Grid fluid>\n              <Row>\n                <Col lg={4} className=\"rb-section-col\">\n                  <RBSupplyChain assets={assets} />\n                </Col>\n                <Col lg={8} className=\"rb-section-col\">\n                  <RBStoryExplorer stories={stories} />\n                </Col>\n              </Row>\n            </Grid>\n          </div>\n        )\n      }\n      </SharedStoriesConsumer>\n    );\n  }\n}\n\nRiskHome.defaultProps = {\n  assets: [],\n  stories: []\n};\n\nexport default RiskHome;\n","import React, { Component } from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport { SharedStoriesConsumer } from '../contexts/stories-context.js';\nimport RBMap from '../components/rb-map.js';\nimport '../styles/rb-incident-detail-page.scss';\nimport queryString from 'query-string';\n\nclass IncidentDetail extends Component {\n\n  render() {\n    const {location} = this.props;\n    const storyId = queryString.parse(location.search).incident;\n    return (\n      <SharedStoriesConsumer>\n      {\n        ({getStoryDetail, getStoriesForSameLocation}) => {\n          const mainStory = getStoryDetail(storyId);\n          const otherStories = getStoriesForSameLocation(mainStory.location);\n          return (\n            <div className=\"rb-incident-detail-page rb-page\">\n              <h1 className=\"rb-page-title\">Indident Risk Analysis</h1>\n              <Grid fluid>\n                <Row>\n                  <div className=\"rb-section\">\n                    <RBMap longitude={+mainStory.long} latitude={+mainStory.lat} zoom={4} stories={otherStories}/>\n                  </div>\n                </Row>\n                <Row>\n                  <div className=\"rb-section white\">\n                    <div className=\"rb-incident-information\">\n                      <div className=\"rb-incident-text\"><strong>Summary:</strong> {mainStory.text}</div>\n                    </div>\n                  </div>\n                </Row>\n              </Grid>\n            </div>\n          )\n        }\n      }\n      </SharedStoriesConsumer>\n    );\n  }\n}\n\nexport default IncidentDetail;\n","import React, { Component } from 'react';\nimport RBHeader from './components/rb-header.js';\nimport RiskHome from './partials/risk-home.js';\nimport IncidentDetail from './partials/incident-detail.js';\nimport supplyChainData from './data/supply-chain-data.json';\nimport { SharedStoriesProvider } from './contexts/stories-context.js';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport 'normalize.css';\nimport './App.scss';\n\n\nconst {assets} = supplyChainData;\nclass App extends Component {\n  render() {\n    return (\n      <Router basename=\"/RiskBoardDemo\">\n        <SharedStoriesProvider>\n          <div className=\"RBApp rb-container\">\n            <RBHeader />\n            <Grid fluid>\n              <Row>\n                <Col className=\"rb-no-margin-col\" lg={2}>\n                  <div className=\"rb-side-section\">\n                    <ul className=\"rb-sidebar-menu\">\n                      <li><a href=\"#\"><span className=\"fa fa-home\"/>Analytics</a></li>\n                      <li><a href=\"#\"><span className=\"fa fa-users\"/>Profile</a></li>\n                      <li><a href=\"#\"><span className=\"fa fa-cog\"/>Settings</a></li>\n                    </ul>\n                  </div>\n                </Col>\n                <Col className=\"rb-no-margin-col\" lg={10}>\n                  <div className=\"rb-main-section\">\n                    <Route exact path=\"/\" render={(props)=> <RiskHome assets={assets} />} />\n                    <Route path=\"/incidents\" component={IncidentDetail} />\n                  </div>\n                </Col>\n              </Row>\n            </Grid>\n          </div>\n        </SharedStoriesProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}